// api/news.js - Vercel Serverless Function for V15.0 - Stable Fetch

// 使用更現代、更穩定的 undici 函式庫來發起網路請求
import { request } from 'undici';

const NEWS_API_KEY = process.env.NEWS_API_KEY;

export default async function handler(req, res) {
    // 處理瀏覽器的 OPTIONS 預檢請求 (CORS)
    if (req.method === 'OPTIONS') {
        res.setHeader('Access-Control-Allow-Origin', '*');
        res.setHeader('Access-Control-Allow-Methods', 'GET');
        res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
        return res.status(204).send('');
    }
    
    // 設定標準 CORS 標頭
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Cache-Control', 's-maxage=600, stale-while-revalidate');


    if (!NEWS_API_KEY) {
        return res.status(500).json({ error: "錯誤：伺服器未配置 NEWS_API_KEY 環境變數。" });
    }

    // 從請求的 URL 中解構查詢參數
    const { q, country } = req.query;

    if (!q && !country) {
        return res.status(400).json({ error: "錯誤：必須提供關鍵詞(q)或國家(country)參數。" });
    }

    const fifteenDaysAgo = new Date();
    fifteenDaysAgo.setDate(fifteenDaysAgo.getDate() - 15);
    const fromDate = fifteenDaysAgo.toISOString().split('T')[0];
    
    let apiUrl;

    if (country) {
        apiUrl = `https://newsapi.org/v2/top-headlines?country=${country}&category=business&apiKey=${NEWS_API_KEY}&pageSize=100`;
    } else {
        apiUrl = `https://newsapi.org/v2/everything?q=${encodeURIComponent(q)}&from=${fromDate}&sortBy=publishedAt&apiKey=${NEWS_API_KEY}&pageSize=100&language=en`;
    }

    try {
        // 使用 undici 的 request 方法發起請求
        const { statusCode, body } = await request(apiUrl);

        if (statusCode !== 200) {
            // 如果 NewsAPI 返回非 200 狀態碼，拋出錯誤
            throw new Error(`NewsAPI returned status code ${statusCode}`);
        }
        
        // 將回應的主體（body）解析為 JSON
        const newsData = await body.json();

        if (newsData.status === 'error') {
            throw new Error(newsData.message);
        }
        
        // 成功，返回新聞數據
        res.status(200).json(newsData);

    } catch (error) {
        console.error("獲取新聞時出錯:", error);
        // 將錯誤訊息以 JSON 格式返回給前端
        res.status(500).json({ error: error.message });
    }
}

